version: 2.1
orbs:
  azure-cli: circleci/azure-cli@1.2.2
  browser-tools: circleci/browser-tools@1.2.3

jobs:
          
  build-dockerhub:
    docker:
      - image: cimg/base:2022.06
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - run: |
          docker build -t braght/cyber-front .
      - run: |
          echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - run: |
          docker push braght/cyber-front


  azure-deploy:
    docker:
      # replace with your preferred image
      - image: cimg/base:stable
    steps:
      - azure-cli/install
      - run: |
          az login -u $AZURE_USERNAME -p $AZURE_PASSWORD
      - run: |
          az container create --resource-group cyber-rg --name cyber-front-container --image braght/cyber-front:latest --dns-name-label cyber-front --ports 80 \
          --environment-variables 'Api_Address'=$Api_Address

  build:
      docker:
        - image: circleci/node
      steps:
        - checkout
        - run: |
            npm install
        - run: |
            ng build

  lint:
      docker:
        - image: circleci/node
      steps:
        - checkout
        - run: |
            npm install
        - run: |
            ng lint

  test:
    working_directory: ~/cyber-front
    docker:
      - image: cimg/node:16.13.1-browsers
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      - checkout
      - restore_cache:
          key: ng-project-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm install
      - run: npm i @angular/cli
      - save_cache:
          key: ng-project-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run: ng test --watch=false

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  cyber-frontend-build-deploy-workflow:
    jobs:
      - build
      - lint
      - test
      - build-dockerhub:
          filters:
            branches:
              only:
                - main
          context: DOCKER_HUB
          requires:
            - build